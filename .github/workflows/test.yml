name: Tests and code coverage

on: #[pull_request]
  push:
    branches:
      - cicd # temp

jobs:
  install:
    name: Setup Fastlane
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Fastlane
        run: |
          gem install fastlane   
  test_iOS:
    needs: install 
    name: iOS Tests
    runs-on: macos-latest
    timeout-minutes: 60
    env: 
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./builder
    strategy:
      matrix:
        destination: ["platform=iOS Simulator,OS=14.4,name=iPhone 12"]
        scheme:
            - TealiumAttributionTests-iOS
            - TealiumAutotrackingTests-iOS 
            - TealiumCollectTests-iOS
            - TealiumCoreTests-iOS
            - TealiumLifecycleTests-iOS
            - TealiumLocationTests-iOS
            - TealiumMediaTests-iOS
            - TealiumRemoteCommandsTests-iOS
            - TealiumTagManagementTests-iOS
            - TealiumVisitorServiceTests-iOS
    steps:
      - uses: actions/checkout@v2 
      - name: Test - "${{ matrix.scheme }}"
        run: rm -rf output && fastlane scan --scheme "${{ matrix.scheme }}" --derived_data_path ./output --code_coverage true --skip_build true 
        working-directory: ${{env.working-directory}}
      - name: Save Code Coverage Report - "${{ matrix.scheme }}"
        run: xcrun xccov view --report --only-targets ./output/Logs/Test/*.xcresult >> "${{ matrix.scheme }}".txt
        working-directory: ${{env.working-directory}}
      # - name: Setup Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.8'
#      - name: Validate Code Coverage - "${{ matrix.scheme }}"
#        run: python3 coverage.py "${{ matrix.scheme }}".txt && exit $(echo $?)
#        working-directory: ${{env.working-directory}}
      - name: Generate and Upload Code Coverage
        run: bash <(curl -s https://codecov.io/bash)>
        working-directory: ${{env.working-directory}}
   test_macOS:
     needs: install
     name: macOS Tests
     runs-on: macos-latest
     timeout-minutes: 60
     env:
       DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
       working-directory: ./builder
     strategy:
       matrix:
         destination: ["platform=macOS,arch=x86_64"]
         scheme:
           - TealiumCoreTests-macOS
           - TealiumCollectTests-macOS
           - TealiumLifecycleTests-macOS
           - TealiumMediaTests-macOS
           - TealiumVisitorServiceTests-macOS
     steps:
      - uses: actions/checkout@v2
      - name: Test - "${{ matrix.scheme }}"
        run: rm -rf output && fastlane scan --scheme "${{ matrix.scheme }}" --derived_data_path ./output --code_coverage true --skip_build true
        working-directory: ${{env.working-directory}}
      - name: Save Code Coverage Report - "${{ matrix.scheme }}"
        run: xcrun xccov view --report --only-targets ./output/Logs/Test/*.xcresult >> "${{ matrix.scheme }}".txt
        working-directory: ${{env.working-directory}}
      # - name: Setup Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.8'
#      - name: Validate Code Coverage - "${{ matrix.scheme }}"
#        run: python3 coverage.py "${{ matrix.scheme }}".txt && exit $(echo $?)
#        working-directory: ${{env.working-directory}}
      - name: Generate and Upload Code Coverage
        run: bash <(curl -s https://codecov.io/bash)>
        working-directory: ${{env.working-directory}}
   test_tvOS:
     needs: install
     name: tvOS Tests
     runs-on: macos-latest
     timeout-minutes: 60
     env:
       DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
       working-directory: ./builder
     strategy:
       matrix:
         destination: ["platform=tvOS Simulator,name=Apple TV"]
         scheme:
           - TealiumCoreTests-tvOS
           - TealiumCollectTests-tvOS
           - TealiumLifecycleTests-tvOS
           - TealiumMediaTests-tvOS
           - TealiumVisitorServiceTests-tvOS
     steps:
      - uses: actions/checkout@v2
      - name: Test - "${{ matrix.scheme }}"
        run: rm -rf output && fastlane scan --scheme "${{ matrix.scheme }}" --derived_data_path ./output --code_coverage true --skip_build true
        working-directory: ${{env.working-directory}}
      - name: Save Code Coverage Report - "${{ matrix.scheme }}"
        run: xcrun xccov view --report --only-targets ./output/Logs/Test/*.xcresult >> "${{ matrix.scheme }}".txt
        working-directory: ${{env.working-directory}}
      # - name: Setup Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.8'
#      - name: Validate Code Coverage - "${{ matrix.scheme }}"
#        run: python3 coverage.py "${{ matrix.scheme }}".txt && exit $(echo $?)
#        working-directory: ${{env.working-directory}}
      - name: Generate and Upload Code Coverage
        run: bash <(curl -s https://codecov.io/bash)>
        working-directory: ${{env.working-directory}}
