name: Tests and code coverage

on:
  push:
    branches:
    - feature/*
    - cicd

jobs:
  install:
    name: Install Tools
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Fastlane
        run: |
          gem install fastlane
      - name: Install Danger and XCov
        run: |
          gem install danger
          gem install danger-xcov
          gem install xcov
  test_iOS:
    needs: install 
    name: iOS Tests
    runs-on: macos-latest
    # runs-on: self-hosted
    timeout-minutes: 60
    env: 
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      working-directory: ./builder
    strategy:
      matrix:
        destination: ["platform=iOS Simulator,OS=14.4,name=iPhone 12"]
        scheme: 
            - TealiumCoreTests-iOS
            - TealiumCollectTests-iOS
            - TealiumLifecycleTests-iOS
            - TealiumVisitorServiceTests-iOS
            - TealiumTagManagementTests-iOS
            - TealiumRemoteCommandsTests-iOS
            - TealiumAttributionTests-iOS
            - TealiumAutotrackingTests-iOS
            - TealiumLocationTests-iOS
    steps:
      - uses: actions/checkout@v2
      - name: Test - "${{ matrix.scheme }}"
        # run: fastlane scan --scheme "${{ matrix.scheme }}" --output-style "raw" --xcargs "-quiet" --output_files "${{ matrix.scheme }}".html
        # run: fastlane scan --scheme "${{ matrix.scheme }}" --output_files "${{ matrix.scheme }}".html
        run: fastlane scan --scheme "${{ matrix.scheme }}" --code_coverage true --skip_build true output_directory:"test_output"
        working-directory: ${{env.working-directory}}
      - name: Code Coverage - "${{ matrix.scheme }}"
        # run: fastlane scan --scheme "${{ matrix.scheme }}" --output-style "raw" --xcargs "-quiet" --output_files "${{ matrix.scheme }}".html
        # run: fastlane scan --scheme "${{ matrix.scheme }}" --output_files "${{ matrix.scheme }}".html
        # run: fastlane run xcov workspace:"" project:"tealium-swift.xcodeproj" scheme:"${{ matrix.scheme }}" output_directory:"test_output"
        run: fastlane run xcov project:"tealium-swift.xcodeproj" scheme:"${{ matrix.scheme }}" output_directory:"test_output"
        working-directory: ${{env.working-directory}}
      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ${{env.working-directory}}/test_output/*.html
  # test_macOS:
  #   name: macOS Tests
  #   runs-on: macos-latest
  #   timeout-minutes: 60
  #   env: 
  #     DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  #     working-directory: ./builder
  #   strategy:
  #     matrix:
  #       destination: ["platform=macOS,arch=x86_64"]
  #       scheme: 
  #         - TealiumCoreTests-macOS
  #         - TealiumCollectTests-macOS
  #         - TealiumLifecycleTests-macOS
  #         - TealiumVisitorServiceTests-macOS
  #         - TealiumTagManagementTests-iOS
  #         - TealiumRemoteCommandsTests-iOS
  #         - TealiumAttributionTests-iOS
  #         - TealiumAutotrackingTests-iOS
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.7'
  #     - name: install fastlane
  #       run: |
  #         brew install fastlane
  #     - name: Test - "${{ matrix.scheme }}"
  #       run: fastlane scan --scheme "${{ matrix.scheme }}" --output_files "${{ matrix.scheme }}".html
  #       working-directory: ${{env.working-directory}}
  #     - name: archive code coverage results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: code-coverage-report
  #         path: ${{env.working-directory}}/test_output/*.html
  # test_tvOS:
  #   name: tvOS Tests
  #   runs-on: macos-latest
  #   timeout-minutes: 60
  #   env: 
  #     DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  #     working-directory: ./builder
  #   strategy:
  #     matrix:
  #       destination: ["platform=tvOS Simulator,name=Apple TV"]
  #       scheme: 
  #         - TealiumCoreTests-tvOS
  #         - TealiumCollectTests-tvOS
  #         - TealiumLifecycleTests-tvOS
  #         - TealiumVisitorServiceTests-tvOS
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.7'
  #     - name: install fastlane
  #       run: |
  #         brew install fastlane
  #     - name: Test "${{ matrix.scheme }}"
  #       run: fastlane scan --scheme "${{ matrix.scheme }}" --output_files "${{ matrix.scheme }}".html
  #       working-directory: ${{env.working-directory}}
  #     - name: Test TealiumCollectTests-tvOS
  #       run: fastlane scan --scheme TealiumCollectTests-tvOS --output_files CollectTests-tvOS.html
  #       working-directory: ${{env.working-directory}}
  #     - name: Test TealiumLifecycleTests-tvOS
  #       run: fastlane scan --scheme TealiumLifecycleTests-tvOS --output_files LifecycleTests-tvOS.html
  #       working-directory: ${{env.working-directory}}
  #     - name: Test TealiumVisitorServiceTests-tvOS
  #       run: fastlane scan --scheme TealiumVisitorServiceTests-tvOS --output_files VisitorServiceTests-tvOS.html
  #       working-directory: ${{env.working-directory}}
  #     - name: archive code coverage results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: code-coverage-report
  #         path: ${{env.working-directory}}/test_output/*.html